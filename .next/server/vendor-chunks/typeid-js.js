"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/typeid-js";
exports.ids = ["vendor-chunks/typeid-js"];
exports.modules = {

/***/ "(rsc)/./node_modules/typeid-js/dist/index.mjs":
/*!***********************************************!*\
  !*** ./node_modules/typeid-js/dist/index.mjs ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TypeID: () => (/* binding */ TypeID),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   fromUUID: () => (/* binding */ fromUUID),\n/* harmony export */   fromUUIDBytes: () => (/* binding */ fromUUIDBytes),\n/* harmony export */   getSuffix: () => (/* binding */ getSuffix),\n/* harmony export */   getType: () => (/* binding */ getType),\n/* harmony export */   parseTypeId: () => (/* binding */ parseTypeId),\n/* harmony export */   toUUID: () => (/* binding */ toUUID),\n/* harmony export */   toUUIDBytes: () => (/* binding */ toUUIDBytes),\n/* harmony export */   typeid: () => (/* binding */ typeid),\n/* harmony export */   typeidUnboxed: () => (/* binding */ typeidUnboxed)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/stringify.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v7.js\");\n// src/typeid.ts\n\n\n// src/parse_uuid.ts\nfunction parseUUID(uuid) {\n  let v;\n  const arr = new Uint8Array(16);\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 255;\n  arr[2] = v >>> 8 & 255;\n  arr[3] = v & 255;\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 255;\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 255;\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 255;\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;\n  arr[11] = v / 4294967296 & 255;\n  arr[12] = v >>> 24 & 255;\n  arr[13] = v >>> 16 & 255;\n  arr[14] = v >>> 8 & 255;\n  arr[15] = v & 255;\n  return arr;\n}\n\n// src/base32.ts\nvar alphabet = \"0123456789abcdefghjkmnpqrstvwxyz\";\nvar dec = new Uint8Array([\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  16,\n  17,\n  255,\n  18,\n  19,\n  255,\n  20,\n  21,\n  255,\n  22,\n  23,\n  24,\n  25,\n  26,\n  255,\n  27,\n  28,\n  29,\n  30,\n  31,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255,\n  255\n]);\nfunction encode(src) {\n  const dst = new Array(26).fill(\"\");\n  if (src.length !== 16) {\n    throw new Error(\n      `Invalid length. Expected 16 bytes, got ${src.length}. Input: ${src}`\n    );\n  }\n  dst[0] = alphabet[(src[0] & 224) >> 5];\n  dst[1] = alphabet[src[0] & 31];\n  dst[2] = alphabet[(src[1] & 248) >> 3];\n  dst[3] = alphabet[(src[1] & 7) << 2 | (src[2] & 192) >> 6];\n  dst[4] = alphabet[(src[2] & 62) >> 1];\n  dst[5] = alphabet[(src[2] & 1) << 4 | (src[3] & 240) >> 4];\n  dst[6] = alphabet[(src[3] & 15) << 1 | (src[4] & 128) >> 7];\n  dst[7] = alphabet[(src[4] & 124) >> 2];\n  dst[8] = alphabet[(src[4] & 3) << 3 | (src[5] & 224) >> 5];\n  dst[9] = alphabet[src[5] & 31];\n  dst[10] = alphabet[(src[6] & 248) >> 3];\n  dst[11] = alphabet[(src[6] & 7) << 2 | (src[7] & 192) >> 6];\n  dst[12] = alphabet[(src[7] & 62) >> 1];\n  dst[13] = alphabet[(src[7] & 1) << 4 | (src[8] & 240) >> 4];\n  dst[14] = alphabet[(src[8] & 15) << 1 | (src[9] & 128) >> 7];\n  dst[15] = alphabet[(src[9] & 124) >> 2];\n  dst[16] = alphabet[(src[9] & 3) << 3 | (src[10] & 224) >> 5];\n  dst[17] = alphabet[src[10] & 31];\n  dst[18] = alphabet[(src[11] & 248) >> 3];\n  dst[19] = alphabet[(src[11] & 7) << 2 | (src[12] & 192) >> 6];\n  dst[20] = alphabet[(src[12] & 62) >> 1];\n  dst[21] = alphabet[(src[12] & 1) << 4 | (src[13] & 240) >> 4];\n  dst[22] = alphabet[(src[13] & 15) << 1 | (src[14] & 128) >> 7];\n  dst[23] = alphabet[(src[14] & 124) >> 2];\n  dst[24] = alphabet[(src[14] & 3) << 3 | (src[15] & 224) >> 5];\n  dst[25] = alphabet[src[15] & 31];\n  return dst.join(\"\");\n}\nfunction decode(s) {\n  if (s.length !== 26) {\n    throw new Error(\n      `Invalid length. Expected 26 bytes, got ${s.length}. Input: ${s}`\n    );\n  }\n  const encoder = new TextEncoder();\n  const v = encoder.encode(s);\n  if (dec[v[0]] === 255 || dec[v[1]] === 255 || dec[v[2]] === 255 || dec[v[3]] === 255 || dec[v[4]] === 255 || dec[v[5]] === 255 || dec[v[6]] === 255 || dec[v[7]] === 255 || dec[v[8]] === 255 || dec[v[9]] === 255 || dec[v[10]] === 255 || dec[v[11]] === 255 || dec[v[12]] === 255 || dec[v[13]] === 255 || dec[v[14]] === 255 || dec[v[15]] === 255 || dec[v[16]] === 255 || dec[v[17]] === 255 || dec[v[18]] === 255 || dec[v[19]] === 255 || dec[v[20]] === 255 || dec[v[21]] === 255 || dec[v[22]] === 255 || dec[v[23]] === 255 || dec[v[24]] === 255 || dec[v[25]] === 255) {\n    throw new Error(\"Invalid base32 character\");\n  }\n  const id = new Uint8Array(16);\n  id[0] = dec[v[0]] << 5 | dec[v[1]];\n  id[1] = dec[v[2]] << 3 | dec[v[3]] >> 2;\n  id[2] = (dec[v[3]] & 3) << 6 | dec[v[4]] << 1 | dec[v[5]] >> 4;\n  id[3] = (dec[v[5]] & 15) << 4 | dec[v[6]] >> 1;\n  id[4] = (dec[v[6]] & 1) << 7 | dec[v[7]] << 2 | dec[v[8]] >> 3;\n  id[5] = (dec[v[8]] & 7) << 5 | dec[v[9]];\n  id[6] = dec[v[10]] << 3 | dec[v[11]] >> 2;\n  id[7] = (dec[v[11]] & 3) << 6 | dec[v[12]] << 1 | dec[v[13]] >> 4;\n  id[8] = (dec[v[13]] & 15) << 4 | dec[v[14]] >> 1;\n  id[9] = (dec[v[14]] & 1) << 7 | dec[v[15]] << 2 | dec[v[16]] >> 3;\n  id[10] = (dec[v[16]] & 7) << 5 | dec[v[17]];\n  id[11] = dec[v[18]] << 3 | dec[v[19]] >> 2;\n  id[12] = (dec[v[19]] & 3) << 6 | dec[v[20]] << 1 | dec[v[21]] >> 4;\n  id[13] = (dec[v[21]] & 15) << 4 | dec[v[22]] >> 1;\n  id[14] = (dec[v[22]] & 1) << 7 | dec[v[23]] << 2 | dec[v[24]] >> 3;\n  id[15] = (dec[v[24]] & 7) << 5 | dec[v[25]];\n  return id;\n}\n\n// src/unboxed/typeid.ts\n\n\n// src/prefix.ts\nfunction isValidPrefix(str) {\n  if (str.length > 63) {\n    return false;\n  }\n  let code;\n  let i;\n  let len;\n  for (i = 0, len = str.length; i < len; i += 1) {\n    code = str.charCodeAt(i);\n    const isLowerAtoZ = code > 96 && code < 123;\n    const isUnderscore = code === 95;\n    if ((i === 0 || i === len - 1) && !isLowerAtoZ) {\n      return false;\n    }\n    if (!(isLowerAtoZ || isUnderscore)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// src/unboxed/error.ts\nvar InvalidPrefixError = class extends Error {\n  constructor(prefix) {\n    super(`Invalid prefix \"${prefix}\". Must be at most 63 ASCII letters [a-z_]`);\n    this.name = \"InvalidPrefixError\";\n  }\n};\nvar PrefixMismatchError = class extends Error {\n  constructor(expected, actual) {\n    super(`Invalid TypeId. Prefix mismatch. Expected ${expected}, got ${actual}`);\n    this.name = \"PrefixMismatchError\";\n  }\n};\nvar EmptyPrefixError = class extends Error {\n  constructor(typeId) {\n    super(`Invalid TypeId. Prefix cannot be empty when there's a separator: ${typeId}`);\n    this.name = \"EmptyPrefixError\";\n  }\n};\nvar InvalidSuffixLengthError = class extends Error {\n  constructor(length) {\n    super(`Invalid length. Suffix should have 26 characters, got ${length}`);\n    this.name = \"InvalidSuffixLengthError\";\n  }\n};\nvar InvalidSuffixCharacterError = class extends Error {\n  constructor(firstChar) {\n    super(`Invalid suffix. First character \"${firstChar}\" must be in the range [0-7]`);\n    this.name = \"InvalidSuffixCharacterError\";\n  }\n};\nvar TypeIDConversionError = class extends Error {\n  constructor(actualPrefix, expectedPrefix) {\n    super(`Cannot convert TypeID of type ${actualPrefix} to type ${expectedPrefix}`);\n    this.name = \"TypeIDConversionError\";\n  }\n};\n\n// src/unboxed/typeid.ts\nfunction typeidUnboxed(prefix = \"\", suffix = \"\") {\n  if (!isValidPrefix(prefix)) {\n    throw new InvalidPrefixError(prefix);\n  }\n  let finalSuffix;\n  if (suffix) {\n    finalSuffix = suffix;\n  } else {\n    const buffer = new Uint8Array(16);\n    (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(void 0, buffer);\n    finalSuffix = encode(buffer);\n  }\n  if (finalSuffix.length !== 26) {\n    throw new InvalidSuffixLengthError(finalSuffix.length);\n  }\n  if (finalSuffix[0] > \"7\") {\n    throw new InvalidSuffixCharacterError(finalSuffix[0]);\n  }\n  decode(finalSuffix);\n  if (prefix === \"\") {\n    return finalSuffix;\n  } else {\n    return `${prefix}_${finalSuffix}`;\n  }\n}\nfunction fromString(typeId, prefix) {\n  let p;\n  let s;\n  const underscoreIndex = typeId.lastIndexOf(\"_\");\n  if (underscoreIndex === -1) {\n    p = \"\";\n    s = typeId;\n  } else {\n    p = typeId.substring(0, underscoreIndex);\n    s = typeId.substring(underscoreIndex + 1);\n    if (!p) {\n      throw new EmptyPrefixError(typeId);\n    }\n  }\n  if (!s) {\n    throw new InvalidSuffixLengthError(0);\n  }\n  if (prefix && p !== prefix) {\n    throw new PrefixMismatchError(prefix, p);\n  }\n  return typeidUnboxed(p, s);\n}\nfunction parseTypeId(typeId) {\n  return { prefix: getType(typeId), suffix: getSuffix(typeId) };\n}\nfunction getType(typeId) {\n  const underscoreIndex = typeId.lastIndexOf(\"_\");\n  if (underscoreIndex === -1) {\n    return \"\";\n  }\n  return typeId.substring(0, underscoreIndex);\n}\nfunction getSuffix(typeId) {\n  const underscoreIndex = typeId.lastIndexOf(\"_\");\n  if (underscoreIndex === -1) {\n    return typeId;\n  }\n  return typeId.substring(underscoreIndex + 1);\n}\nfunction toUUIDBytes(typeId) {\n  return decode(getSuffix(typeId));\n}\nfunction toUUID(typeId) {\n  return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(toUUIDBytes(typeId));\n}\nfunction fromUUIDBytes(prefix, bytes) {\n  const suffix = encode(bytes);\n  return prefix ? `${prefix}_${suffix}` : suffix;\n}\nfunction fromUUID(uuid, prefix) {\n  const suffix = encode(parseUUID(uuid));\n  return prefix ? `${prefix}_${suffix}` : suffix;\n}\n\n// src/typeid.ts\nvar TypeID = class {\n  constructor(prefix, suffix = \"\") {\n    this.prefix = prefix;\n    this.suffix = suffix;\n    const typeIdRaw = typeidUnboxed(prefix, suffix);\n    this.prefix = getType(typeIdRaw);\n    this.suffix = getSuffix(typeIdRaw);\n  }\n  getType() {\n    return this.prefix;\n  }\n  getSuffix() {\n    return this.suffix;\n  }\n  asType(prefix) {\n    const self = this;\n    if (self.prefix !== prefix) {\n      throw new TypeIDConversionError(self.prefix, prefix);\n    }\n    return self;\n  }\n  toUUIDBytes() {\n    return decode(this.suffix);\n  }\n  toUUID() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this.toUUIDBytes());\n  }\n  toString() {\n    if (this.prefix === \"\") {\n      return this.suffix;\n    }\n    return `${this.prefix}_${this.suffix}`;\n  }\n  static fromString(str, prefix) {\n    const typeIdRaw = fromString(str, prefix);\n    return new TypeID(getType(typeIdRaw), getSuffix(typeIdRaw));\n  }\n  static fromUUIDBytes(prefix, bytes) {\n    const suffix = encode(bytes);\n    return new TypeID(prefix, suffix);\n  }\n  static fromUUID(prefix, uuid) {\n    const suffix = encode(parseUUID(uuid));\n    return new TypeID(prefix, suffix);\n  }\n};\nfunction typeid(prefix = \"\", suffix = \"\") {\n  return new TypeID(prefix, suffix);\n}\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/typeid-js/dist/index.mjs\n");

/***/ })

};
;